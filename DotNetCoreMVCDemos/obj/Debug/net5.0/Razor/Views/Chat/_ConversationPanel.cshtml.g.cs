#pragma checksum "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b019f035eac78cd24ffb050128f5873c0fd61299"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Chat__ConversationPanel), @"mvc.1.0.view", @"/Views/Chat/_ConversationPanel.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\_ViewImports.cshtml"
using DotNetCoreMVCDemos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\_ViewImports.cshtml"
using DotNetCoreMVCDemos.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b019f035eac78cd24ffb050128f5873c0fd61299", @"/Views/Chat/_ConversationPanel.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c1126c24cc3b8f7e1baf88f1be61ab8a996b8766", @"/Views/_ViewImports.cshtml")]
    public class Views_Chat__ConversationPanel : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DotNetCoreMVCDemos.Models.ChatConversation>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/fonts/MaterialDesign/css/materialdesignicons.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/vendors/perfect-scrollbar/perfect-scrollbar.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/vendors/OwlCarousel2/owl.carousel.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/css/app.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/css/theme/default.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/images/user/250/02.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/images/tick/tick-delivered.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/images/tick/tick-read.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/images/user/250/01.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/images/svg/typing-01.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("img-fluid"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/images/user/500/09.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/vendors/jquery/jquery-3.4.1.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/vendors/material-floating-button/dist/mfb.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/vendors/perfect-scrollbar/perfect-scrollbar.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/vendors/OwlCarousel2/owl.carousel.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/js/app.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
  
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
#nullable restore
#line 16 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
  var UserId = HttpContextAccessor.HttpContext.Session.GetString("UserId");

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129911722", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129912838", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129913954", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129915070", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129916186", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129917302", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<div class=""ca-content__chatstab"">
    <div class=""ca-content__chatstab--personal"">
        <div class=""conversation-wrapper"">
            <div class=""conversation-panel"">
                <div class=""conversation-panel__head"">
                    <div class=""conversation-panel__back-button "">
                        <i class=""mdi mdi-arrow-left""></i>
                    </div>

                    <div class=""conversation-panel__avatar personalinfo-panel-opener"">
                        <div class=""user-avatar user-avatar-rounded"">
                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129919012", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                        </div>\r\n                        <div class=\"conversation__name\">\r\n                            <div class=\"conversation__name--title\">");
#nullable restore
#line 38 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                              Write(Model.ChatUserName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n");
#nullable restore
#line 39 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                             if (Model.Lastseen == "Online")
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <div class=\"conversation__time\">Active</div>\r\n");
#nullable restore
#line 42 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                            }
                            else if (Model.Lastseen == "Away")
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <div class=\"conversation__time\">Away</div>\r\n");
#nullable restore
#line 46 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                            }
                            else
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <div class=\"conversation__time\">last seen at ");
#nullable restore
#line 49 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                        Write(Model.Lastseen);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n");
#nullable restore
#line 50 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("                        </div>\r\n                    </div>\r\n                    <div class=\"conversation__actions\">\r\n                        <div class=\"action-icon\"");
            BeginWriteAttribute("onclick", " onclick=\"", 2836, "\"", 2882, 3);
            WriteAttributeValue("", 2846, "MakePesronalcall(", 2846, 17, true);
#nullable restore
#line 54 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
WriteAttributeValue("", 2863, Model.ChatUserId, 2863, 17, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 2880, ");", 2880, 2, true);
            EndWriteAttribute();
            WriteLiteral(@">
                            <i class=""mdi mdi-phone""></i>
                        </div>
                        <div class=""action-icon"" data-toggle=""modal"" data-target=""#incomingVideoStart"">
                            <i class=""mdi mdi-video-outline""></i>
                        </div>

                        <div class=""iconbox-dropdown dropdown"">
                            <div class=""iconbox btn-hovered-light"" role=""button"" id=""dropdownMenuLink2"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                <i class=""iconbox__icon mdi mdi-dots-vertical""></i>
                            </div>
                            <div class=""dropdown-menu dropdown-menu-right"" aria-labelledby=""dropdownMenuLink2"">
                                <a class=""dropdown-item personalinfo-panel-opener"" href=""javascript:;"">
                                    <span><i class=""mdi mdi-information-outline""></i></span>
                                    <span>View Contact");
            WriteLiteral(@"</span>
                                </a>
                                <a class=""dropdown-item"" href=""javascript:;"">
                                    <span><i class=""mdi mdi-magnify""></i></span>
                                    <span>Search</span>
                                </a>
                                <a class=""dropdown-item"" href=""javascript:;"">
                                    <span><i class=""mdi mdi-volume-mute""></i></span>
                                    <span>Mute notifications</span>
                                </a>
                                <a class=""dropdown-item"" href=""javascript:;"">
                                    <span><i class=""mdi mdi-wallpaper""></i></span>
                                    <span>Wallpaper</span>
                                </a>
                                <a class=""dropdown-item"" href=""javascript:;"">
                                    <span><i class=""mdi mdi-notification-clear-all""></i></span>
            ");
            WriteLiteral(@"                        <span>Clear Chat</span>
                                </a>
                                <a class=""dropdown-item"" href=""javascript:;"">
                                    <span><i class=""mdi mdi-export-variant""></i></span>
                                    <span>Export Chat</span>
                                </a>
                                <div class=""dropdown-divider""></div>
                                <a class=""dropdown-item"" href=""javascript:;"">
                                    <span><i class=""mdi mdi-cancel""></i></span>
                                    <span>Block</span>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>

                <div id=""htmlMessageBody"" class=""conversation-panel__body"">
                    <div class=""container"">
                        <div id=""htmlMessageId"" class=""chatstyle-01"">
");
#nullable restore
#line 104 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                             foreach (var message in Model.Messages)
                            {
                                if (message.UserID == UserId)
                                {
                                    if (string.IsNullOrEmpty(@message.DocUrl) && !(@message.Message.Contains("pdf") || @message.Message.Contains("doc") || @message.Message.Contains("xls") || @message.Message.Contains("ppt") || @message.Message.Contains(".mp4") || @message.Message.Contains(".wmv") || @message.Message.Contains(".webm") || @message.Message.Contains(".avi")))
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                        <div class=""ca-send"">
                                            <div class=""ca-send__msg-group"">
                                                <div class=""ca-send__msgwrapper"">
                                                    <div class=""ca-msg-actions"">
                                                        <div class=""iconbox-dropdown dropdown"">
                                                            <div class=""iconbox btn-hovered-light"" id=""dropdownMenuButtons1"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                                <i class=""iconbox__icon mdi mdi-dots-horizontal""></i>
                                                            </div>
                                                            <div class=""dropdown-menu dropdown-menu-right"" aria-labelledby=""dropdownMenuButtons1"">

                                                                <a class=""dro");
            WriteLiteral(@"pdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-share-outline""></i></span>
                                                                    <span>Forward</span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-content-copy""></i></span>
                                                                    <span>Copy</span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-star-outline""></i></span>
                                                                    <span>Add Star</span>
  ");
            WriteLiteral(@"                                                              </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-trash-can-outline""></i></span>
                                                                    <span>Delete</span>
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class=""ca-send__msg"">");
#nullable restore
#line 139 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                         Write(message.Message);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n                                                </div>\r\n                                                <div class=\"metadata\">\r\n                                                    <span class=\"time\">");
#nullable restore
#line 142 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                  Write(message.MessageTime);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n");
#nullable restore
#line 143 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                     if (@message.IsRead == 0)
                                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                        <span class=\"tick\">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129931281", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        </span>\r\n");
#nullable restore
#line 148 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                    }
                                                    else
                                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                        <span class=\"tick\">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129932981", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        </span>\r\n");
#nullable restore
#line 154 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                                </div>
                                            </div>

                                            <div class=""user-avatar user-avatar-sm user-avatar-rounded online"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129934702", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            </div>\r\n                                        </div>\r\n");
#nullable restore
#line 162 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                    }
                                    else if (@message.Message.Contains(".jpeg") || @message.Message.Contains(".jpg") || @message.Message.Contains(".png") || @message.Message.Contains(".gif"))
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                        <div class=""ca-send"">
                                            <div class=""ca-send__msg-group"">
                                                <div class=""ca-send__msgwrapper"">
                                                    <div class=""ca-msg-actions"">
                                                        <div class=""iconbox-dropdown dropdown"">
                                                            <div class=""iconbox btn-hovered-light"" id=""dropdownMenuButtonsms1"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                                <i class=""iconbox__icon mdi mdi-dots-horizontal""></i>
                                                            </div>
                                                            <div class=""dropdown-menu"" aria-labelledby=""dropdownMenuButtonsms1"">
");
            WriteLiteral(@"                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-share-outline""></i></span>
                                                                    <span>Forward</span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-content-copy""></i></span>
                                                                    <span>Copy</span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-star-outline""></i></span>
                ");
            WriteLiteral(@"                                                    <span>Add Star</span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-trash-can-outline""></i></span>
                                                                    <span>Delete</span>
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class=""ca-send__msg"">
                                                        <div class=""ca-send__msg-media-group"">
                                                            <div class=""ca-send__msg-media"">
                       ");
            WriteLiteral("                                         <img");
            BeginWriteAttribute("src", " src=\"", 14807, "\"", 14828, 1);
#nullable restore
#line 202 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
WriteAttributeValue("", 14813, message.DocUrl, 14813, 15, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            BeginWriteAttribute("alt", " alt=\"", 14829, "\"", 14835, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""metadata"">
                                                    <span class=""time"">");
#nullable restore
#line 208 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                  Write(message.MessageTime);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n");
#nullable restore
#line 209 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                     if (@message.IsRead == 0)
                                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                        <span class=\"tick\">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129941270", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        </span>\r\n");
#nullable restore
#line 214 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                    }
                                                    else
                                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                        <span class=\"tick\">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129942970", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        </span>\r\n");
#nullable restore
#line 220 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                                </div>
                                            </div>
                                            <div class=""user-avatar user-avatar-sm user-avatar-rounded online"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129944689", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            </div>\r\n                                        </div>\r\n");
#nullable restore
#line 227 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                    }
                                    else
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                        <div class=""ca-send"">
                                            <div class=""ca-send__msg-group"">
                                                <div class=""ca-send__msgwrapper"">
                                                    <div class=""ca-msg-actions"">
                                                        <div class=""iconbox-dropdown dropdown"">
                                                            <div class=""iconbox btn-hovered-light"" id=""dropdownMenuButtons7"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                                <i class=""iconbox__icon mdi mdi-dots-horizontal""></i>
                                                            </div>
                                                            <div class=""dropdown-menu dropdown-menu-right"" aria-labelledby=""dropdownMenuButtons7"">

                                                                <a class=""dro");
            WriteLiteral("pdown-item\"");
            BeginWriteAttribute("href", " href=\"", 17703, "\"", 17781, 1);
#nullable restore
#line 240 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
WriteAttributeValue("", 17710, Url.Action("DownloadDocument","Chat",new { filename=@message.Message}), 17710, 71, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@">
                                                                    <span><i class=""mdi mdi-download-outline""></i></span>
                                                                    <span>Download</span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-share-outline""></i></span>
                                                                    <span>Forward</span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-content-copy""></i></span>
                                                                    <span>Copy</span>
                             ");
            WriteLiteral(@"                                   </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-star-outline""></i></span>
                                                                    <span>Add Star</span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-trash-can-outline""></i></span>
                                                                    <span>Delete</span>
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </div>
      ");
            WriteLiteral("                                              <div class=\"ca-send__msg\">\r\n                                                        <div class=\"ca__file\">\r\n                                                            <div class=\"ca__fileicon\">\r\n");
#nullable restore
#line 266 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                 if (@message.Message.Contains("pdf"))
                                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                                    <img src=\"/lib/images/svg/pdf.svg\"");
            BeginWriteAttribute("alt", " alt=\"", 20345, "\"", 20351, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n");
#nullable restore
#line 269 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                }
                                                                else if (@message.Message.Contains("doc"))
                                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                                    <img src=\"/lib/images/svg/doc.svg\"");
            BeginWriteAttribute("alt", " alt=\"", 20699, "\"", 20705, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n");
#nullable restore
#line 273 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                }
                                                                else if (@message.Message.Contains("xls"))
                                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                                    <img src=\"/lib/images/svg/xls.svg\"");
            BeginWriteAttribute("alt", " alt=\"", 21053, "\"", 21059, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n");
#nullable restore
#line 277 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                }
                                                                else if (@message.Message.Contains("ppt"))
                                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                                    <img src=\"/lib/images/svg/ppt.svg\"");
            BeginWriteAttribute("alt", " alt=\"", 21407, "\"", 21413, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n");
#nullable restore
#line 281 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                }
                                                                else if (@message.Message.Contains(".mp4") || @message.Message.Contains(".wmv") || @message.Message.Contains(".webm") || @message.Message.Contains(".avi"))
                                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                                    <img src=\"/lib/images/svg/mp4.svg\"");
            BeginWriteAttribute("alt", " alt=\"", 21874, "\"", 21880, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n");
#nullable restore
#line 285 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                }
                                                                else
                                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                                    <img src=\"/lib/images/svg/happy.svg\"");
            BeginWriteAttribute("alt", " alt=\"", 22192, "\"", 22198, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n");
#nullable restore
#line 289 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                            </div>\r\n                                                            <div class=\"ca__filename\">\r\n                                                                <span class=\"ca__filename--title\">");
#nullable restore
#line 292 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                                             Write(message.Message);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n");
            WriteLiteral(@"                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class=""metadata"">
                                                    <span class=""time"">");
#nullable restore
#line 300 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                  Write(message.MessageTime);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n");
#nullable restore
#line 301 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                     if (@message.IsRead == 0)
                                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                        <span class=\"tick\">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129956480", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        </span>\r\n");
#nullable restore
#line 306 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                    }
                                                    else
                                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                        <span class=\"tick\">\r\n                                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129958180", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                        </span>\r\n");
#nullable restore
#line 312 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                                </div>
                                            </div>
                                            <div class=""user-avatar user-avatar-sm user-avatar-rounded online"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129959899", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            </div>\r\n                                        </div>\r\n");
#nullable restore
#line 319 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                    }
                                }
                                else
                                {
                                    if (string.IsNullOrEmpty(@message.DocUrl) && !(@message.Message.Contains("pdf") || @message.Message.Contains("doc") || @message.Message.Contains("xls") || @message.Message.Contains("ppt") || @message.Message.Contains(".mp4") || @message.Message.Contains(".wmv") || @message.Message.Contains(".webm") || @message.Message.Contains(".avi")))
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <div class=\"ca-received\">\r\n                                            <div class=\"user-avatar user-avatar-sm user-avatar-rounded online\">\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129962125", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </div>
                                            <div class=""ca-received__msg-group"">
                                                <div class=""ca-received__msgwrapper"">
                                                    <div class=""ca-received__msg"">");
#nullable restore
#line 331 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                             Write(message.Message);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</div>
                                                    <div class=""ca-msg-actions"">
                                                        <div class=""iconbox-dropdown dropdown"">
                                                            <div class=""iconbox btn-hovered-light"" id=""dropdownMenuButtonsr1"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                                <i class=""iconbox__icon mdi mdi-dots-horizontal""></i>
                                                            </div>
                                                            <div class=""dropdown-menu"" aria-labelledby=""dropdownMenuButtonsr1"">
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-share-outline""></i></span>
                                                                    <span>Forward<");
            WriteLiteral(@"/span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-content-copy""></i></span>
                                                                    <span>Copy</span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-star-outline""></i></span>
                                                                    <span>Add Star</span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                         ");
            WriteLiteral(@"           <span><i class=""mdi mdi-trash-can-outline""></i></span>
                                                                    <span>Delete</span>
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""metadata"">
                                                    <span class=""time"">");
#nullable restore
#line 359 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                  Write(message.MessageTime);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n");
#nullable restore
#line 363 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                    }
                                    else if (@message.Message.Contains(".jpeg") || @message.Message.Contains(".jpg") || @message.Message.Contains(".png") || @message.Message.Contains(".gif"))
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <div class=\"ca-received\">\r\n                                            <div class=\"user-avatar user-avatar-sm user-avatar-rounded online\">\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129967833", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </div>
                                            <div class=""ca-received__msg-group"">
                                                <div class=""ca-received__msgwrapper"">
                                                    <div class=""ca-received__msg"">
                                                        <div class=""ca-received__msg-media-group"">
                                                            <div class=""ca-received__msg-media"">
                                                                <img");
            BeginWriteAttribute("src", " src=\"", 29500, "\"", 29521, 1);
#nullable restore
#line 375 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
WriteAttributeValue("", 29506, message.DocUrl, 29506, 15, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            BeginWriteAttribute("alt", " alt=\"", 29522, "\"", 29528, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class=""ca-msg-actions"">
                                                        <div class=""iconbox-dropdown dropdown"">
                                                            <div class=""iconbox btn-hovered-light"" id=""dropdownMenuButtonsr6"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                                <i class=""iconbox__icon mdi mdi-dots-horizontal""></i>
                                                            </div>
                                                            <div class=""dropdown-menu"" aria-labelledby=""dropdownMenuButtonsr6"">
                                                                <a class=""dropdown-item"" href=""javascript:;"">
             ");
            WriteLiteral(@"                                                       <span><i class=""mdi mdi-download-outline""></i></span>
                                                                    <span>Download</span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-share-outline""></i></span>
                                                                    <span>Forward</span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-content-copy""></i></span>
                                                                    <span>Copy</span>
                                             ");
            WriteLiteral(@"                   </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-star-outline""></i></span>
                                                                    <span>Add Star</span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-trash-can-outline""></i></span>
                                                                    <span>Delete</span>
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </div>
                      ");
            WriteLiteral("                          </div>\r\n                                                <div class=\"metadata\">\r\n                                                    <span class=\"time\">");
#nullable restore
#line 411 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                  Write(message.MessageTime);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n");
#nullable restore
#line 415 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                    }
                                    else
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <div class=\"ca-received\">\r\n                                            <div class=\"user-avatar user-avatar-sm user-avatar-rounded online\">\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129974470", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </div>
                                            <div class=""ca-received__msg-group"">
                                                <div class=""ca-received__msgwrapper"">
                                                    <div class=""ca-received__msg"">
                                                        <div class=""ca__file"">
                                                            <div class=""ca__fileicon"">
");
#nullable restore
#line 427 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                 if (@message.Message.Contains("pdf"))
                                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                                    <img src=\"/lib/images/svg/pdf.svg\"");
            BeginWriteAttribute("alt", " alt=\"", 34106, "\"", 34112, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n");
#nullable restore
#line 430 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                }
                                                                else if (@message.Message.Contains("doc"))
                                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                                    <img src=\"/lib/images/svg/doc.svg\"");
            BeginWriteAttribute("alt", " alt=\"", 34460, "\"", 34466, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n");
#nullable restore
#line 434 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                }
                                                                else if (@message.Message.Contains("xls"))
                                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                                    <img src=\"/lib/images/svg/xls.svg\"");
            BeginWriteAttribute("alt", " alt=\"", 34814, "\"", 34820, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n");
#nullable restore
#line 438 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                }
                                                                else if (@message.Message.Contains("ppt"))
                                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                                    <img src=\"/lib/images/svg/ppt.svg\"");
            BeginWriteAttribute("alt", " alt=\"", 35168, "\"", 35174, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n");
#nullable restore
#line 442 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                }
                                                                else if (@message.Message.Contains(".mp4") || @message.Message.Contains(".wmv") || @message.Message.Contains(".webm") || @message.Message.Contains(".avi"))
                                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                                    <img src=\"/lib/images/svg/mp4.svg\"");
            BeginWriteAttribute("alt", " alt=\"", 35635, "\"", 35641, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n");
#nullable restore
#line 446 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                }
                                                                else
                                                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                                    <img src=\"/lib/images/svg/happy.svg\"");
            BeginWriteAttribute("alt", " alt=\"", 35953, "\"", 35959, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n");
#nullable restore
#line 450 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                }

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                            </div>\r\n                                                            <div class=\"ca__filename\">\r\n                                                                <span class=\"ca__filename--title\">");
#nullable restore
#line 453 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                                             Write(message.Message);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n");
            WriteLiteral(@"                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class=""ca-msg-actions"">
                                                        <div class=""iconbox-dropdown dropdown"">
                                                            <div class=""iconbox btn-hovered-light"" id=""dropdownMenuButtonsr7"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                                                                <i class=""iconbox__icon mdi mdi-dots-horizontal""></i>
                                                            </div>
                                                            <div class=""dropdown-menu"" aria-labelledby=""dropdownMenuButtonsr7"" x-placement=""bottom-start"" style=""position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(0px, 37");
            WriteLiteral("px, 0px);\">\r\n                                                                <a class=\"dropdown-item\"");
            BeginWriteAttribute("href", " href=\"", 37548, "\"", 37626, 1);
#nullable restore
#line 465 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
WriteAttributeValue("", 37555, Url.Action("DownloadDocument","Chat",new { filename=@message.Message}), 37555, 71, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@">
                                                                    <span><i class=""mdi mdi-download-outline""></i></span>
                                                                    <span>Download</span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-share-outline""></i></span>
                                                                    <span>Forward</span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-content-copy""></i></span>
                                                                    <span>Copy</span>
                             ");
            WriteLiteral(@"                                   </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-star-outline""></i></span>
                                                                    <span>Add Star</span>
                                                                </a>
                                                                <a class=""dropdown-item"" href=""javascript:;"">
                                                                    <span><i class=""mdi mdi-trash-can-outline""></i></span>
                                                                    <span>Delete</span>
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </div>
      ");
            WriteLiteral("                                          </div>\r\n                                                <div class=\"metadata\">\r\n                                                    <span class=\"time\">");
#nullable restore
#line 490 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                                                  Write(message.MessageTime);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n");
#nullable restore
#line 494 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
                                    }
                                }

                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                            <div class=\"ca-received\" id=\"msgTypingId\" style=\"display:none;\">\r\n                                <div class=\"user-avatar user-avatar-sm user-avatar-rounded online\">\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129986190", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                </div>
                                <div class=""ca-received__msg-group"">
                                    <div class=""ca-received__msgwrapper"">
                                        <div class=""ca-received__msg"">
                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "b019f035eac78cd24ffb050128f5873c0fd6129987612", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

                <input type=""hidden"" id=""hdnUserId""");
            BeginWriteAttribute("value", " value=\"", 41103, "\"", 41124, 1);
#nullable restore
#line 516 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
WriteAttributeValue("", 41111, Model.UserId, 41111, 13, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n                <input type=\"hidden\" id=\"hdnChatUserId\"");
            BeginWriteAttribute("value", " value=\"", 41185, "\"", 41210, 1);
#nullable restore
#line 517 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
WriteAttributeValue("", 41193, Model.ChatUserId, 41193, 17, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n                <input type=\"hidden\" id=\"hdnChatUserName\"");
            BeginWriteAttribute("value", " value=\"", 41273, "\"", 41300, 1);
#nullable restore
#line 518 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
WriteAttributeValue("", 41281, Model.ChatUserName, 41281, 19, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n                <input type=\"hidden\" id=\"hdnLastseen\"");
            BeginWriteAttribute("value", " value=\"", 41359, "\"", 41382, 1);
#nullable restore
#line 519 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
WriteAttributeValue("", 41367, Model.Lastseen, 41367, 15, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n                <input type=\"hidden\" id=\"hdnMsgCount\"");
            BeginWriteAttribute("value", " value=\"", 41441, "\"", 41472, 1);
#nullable restore
#line 520 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
WriteAttributeValue("", 41449, Model.Messages.Count(), 41449, 23, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n");
            WriteLiteral(@"                <div class=""conversation-panel__footer"">
                    <div class=""composer"">
                        <div class=""composer__left"">
                            <div class=""composer__left--sticker"">
                                <i class=""mdi mdi-sticker-emoji""></i>
                            </div>
                            <div class=""composer__left--emoticon"">
                                <i class=""mdi mdi-emoticon-outline""></i>
                            </div>
                        </div>

                        <div class=""composer__middle"">
                            <div class=""row col-10 images"">

                            </div>
                            <textarea class=""form-control"" rows=""1"" onkeydown=""UserTyping()"" id=""txtMessageId"" placeholder=""Type a message...""></textarea>

                            <div class=""composer__middle--microphone"">
                                <i class=""mdi mdi-microphone""></i>
                            <");
            WriteLiteral(@"/div>
                            <div class=""composer__middle--photo addImages"">
                                <i class=""mdi mdi-camera pic""></i>
                            </div>
                            <div class=""composer__middle--attachment addDoc"">
                                <i class=""mdi mdi-attachment pic""></i>
                            </div>
                        </div>

                        <div class=""composer__right"">
                            <div class=""composer__right--send"" onclick=""SendMessage()"">
                                <i class=""mdi mdi-send""></i>
                            </div>
                            <div class=""composer__right--microphone"">
                                <i class=""mdi mdi-microphone""></i>
                            </div>
                        </div>
                    </div>
                </div>



            </div>
");
            WriteLiteral("            <div class=\"information-panel personal-information-panel\">\r\n                ");
#nullable restore
#line 566 "E:\ManekTech\Git Projects\dotnetdemomvc\DotNetCoreMVCDemos\Views\Chat\_ConversationPanel.cshtml"
           Write(Html.RenderAction("GetContactInfo", "Chat", new { ChatUserId = @Model.ChatUserId, UserName = "", UserId = @UserId }));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
            </div>
        </div>
    </div>
</div>

<div class=""ca-content__callstab"">

    <div class=""container"">
        <div class=""row"">
            <div class=""col-12"">
                <div class=""card"">
                    <div class=""card-body p-0"">
                        <div class=""ca-call-details-card"">
                            <div class=""conversation-panel__back-button "">
                                <i class=""mdi mdi-arrow-left""></i>
                            </div>
                            <div class=""ca-call-details__left"">
                                <div class=""user-avatar  user-avatar-xl user-avatar-rounded online"">
                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd6129994548", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                </div>
                                <div class=""ca-call-details__pname"">
                                    <div>Earnest Clements</div>
                                    <div class=""calllist__details--info"">
                                        <span><i class=""mdi mdi-tag-outline""></i></span>
                                        <span>Co-Workers</span>
                                    </div>
                                </div>
                            </div>
                            <div class=""ca-call-details__right"">
                                <div class=""iconbox btn-solid-primary"">
                                    <i class=""iconbox__icon mdi mdi-message-text-outline""></i>
                                </div>
                                <div class=""iconbox btn-solid-success"">
                                    <i class=""iconbox__icon mdi mdi-phone""></i>
                                </div>
                            ");
            WriteLiteral(@"    <div class=""iconbox btn-solid-info"">
                                    <i class=""iconbox__icon mdi mdi-video-outline""></i>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class=""row mt-4"">
            <div class=""col-12"">
                <div class=""ca-call-details-history"">
                    <div class=""card"">
                        <div class=""card-body"">
                            <div class=""ca-call-history"">
                                <div class=""ca-call-history__left"">
                                    <div class=""call-outline-btn call-incoming-icon"">
                                        <i class=""mdi mdi-phone-incoming""></i>
                                    </div>
                                    <div class=""ca-call-history__left--title"">
                                        <div>Incoming Call</div>");
            WriteLiteral(@"
                                        <span>5 Minutes ago - 12m 26s</span>
                                    </div>
                                </div>
                                <div class=""ca-call-history__right"">
                                    <div class=""iconbox btn-solid-info"">
                                        <i class=""iconbox__icon mdi mdi-video-outline""></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""card"">
                        <div class=""card-body"">
                            <div class=""ca-call-history"">
                                <div class=""ca-call-history__left"">
                                    <div class=""call-outline-btn call-outgoing-icon"">
                                        <i class=""mdi mdi-phone-outgoing""></i>
                                    </div>
               ");
            WriteLiteral(@"                     <div class=""ca-call-history__left--title"">
                                        <div>Outgoing Call</div>
                                        <span>5 Minutes ago - 12m 26s</span>
                                    </div>
                                </div>
                                <div class=""ca-call-history__right"">
                                    <div class=""iconbox btn-solid-success"">
                                        <i class=""iconbox__icon mdi mdi-phone""></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""card"">
                        <div class=""card-body"">
                            <div class=""ca-call-history"">
                                <div class=""ca-call-history__left"">
                                    <div class=""call-outline-btn call-missed-icon"">
                 ");
            WriteLiteral(@"                       <i class=""mdi mdi-phone-missed""></i>
                                    </div>
                                    <div class=""ca-call-history__left--title"">
                                        <div>Missed Call</div>
                                        <span>5 Minutes ago</span>
                                    </div>
                                </div>
                                <div class=""ca-call-history__right"">
                                    <div class=""iconbox btn-solid-info"">
                                        <i class=""iconbox__icon mdi mdi-video-outline""></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""card"">
                        <div class=""card-body"">
                            <div class=""ca-call-history"">
                                <div class=""ca-call-histor");
            WriteLiteral(@"y__left"">
                                    <div class=""call-outline-btn call-incoming-icon"">
                                        <i class=""mdi mdi-phone-incoming""></i>
                                    </div>
                                    <div class=""ca-call-history__left--title"">
                                        <div>Incoming Call</div>
                                        <span>5 Minutes ago - 12m 26s</span>
                                    </div>
                                </div>
                                <div class=""ca-call-history__right"">
                                    <div class=""iconbox btn-solid-info"">
                                        <i class=""iconbox__icon mdi mdi-video-outline""></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""card"">
                        <div class=""c");
            WriteLiteral(@"ard-body"">
                            <div class=""ca-call-history"">
                                <div class=""ca-call-history__left"">
                                    <div class=""call-outline-btn call-incoming-icon"">
                                        <i class=""mdi mdi-phone-incoming""></i>
                                    </div>
                                    <div class=""ca-call-history__left--title"">
                                        <div>Incoming Call</div>
                                        <span>5 Minutes ago - 12m 26s</span>
                                    </div>
                                </div>
                                <div class=""ca-call-history__right"">
                                    <div class=""iconbox btn-solid-info"">
                                        <i class=""iconbox__icon mdi mdi-video-outline""></i>
                                    </div>
                                </div>
                            </div>
        ");
            WriteLiteral(@"                </div>
                    </div>
                    <div class=""card"">
                        <div class=""card-body"">
                            <div class=""ca-call-history"">
                                <div class=""ca-call-history__left"">
                                    <div class=""call-outline-btn call-incoming-icon"">
                                        <i class=""mdi mdi-phone-incoming""></i>
                                    </div>
                                    <div class=""ca-call-history__left--title"">
                                        <div>Incoming Call</div>
                                        <span>5 Minutes ago - 12m 26s</span>
                                    </div>
                                </div>
                                <div class=""ca-call-history__right"">
                                    <div class=""iconbox btn-solid-info"">
                                        <i class=""iconbox__icon mdi mdi-video-outline""></i>");
            WriteLiteral(@"
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""card"">
                        <div class=""card-body"">
                            <div class=""ca-call-history"">
                                <div class=""ca-call-history__left"">
                                    <div class=""call-outline-btn call-outgoing-icon"">
                                        <i class=""mdi mdi-phone-outgoing""></i>
                                    </div>
                                    <div class=""ca-call-history__left--title"">
                                        <div>Outgoing Call</div>
                                        <span>5 Minutes ago - 12m 26s</span>
                                    </div>
                                </div>
                                <div class=""ca-call-history__right"">
                                    <");
            WriteLiteral(@"div class=""iconbox btn-solid-success"">
                                        <i class=""iconbox__icon mdi mdi-phone""></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""card"">
                        <div class=""card-body"">
                            <div class=""ca-call-history"">
                                <div class=""ca-call-history__left"">
                                    <div class=""call-outline-btn call-missed-icon"">
                                        <i class=""mdi mdi-phone-missed""></i>
                                    </div>
                                    <div class=""ca-call-history__left--title"">
                                        <div>Missed Call</div>
                                        <span>5 Minutes ago</span>
                                    </div>
                                </div>");
            WriteLiteral(@"
                                <div class=""ca-call-history__right"">
                                    <div class=""iconbox btn-solid-info"">
                                        <i class=""iconbox__icon mdi mdi-video-outline""></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""card"">
                        <div class=""card-body"">
                            <div class=""ca-call-history"">
                                <div class=""ca-call-history__left"">
                                    <div class=""call-outline-btn call-outgoing-icon"">
                                        <i class=""mdi mdi-phone-outgoing""></i>
                                    </div>
                                    <div class=""ca-call-history__left--title"">
                                        <div>Outgoing Call</div>
                                ");
            WriteLiteral(@"        <span>5 Minutes ago - 12m 26s</span>
                                    </div>
                                </div>
                                <div class=""ca-call-history__right"">
                                    <div class=""iconbox btn-solid-success"">
                                        <i class=""iconbox__icon mdi mdi-phone""></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""card"">
                        <div class=""card-body"">
                            <div class=""ca-call-history"">
                                <div class=""ca-call-history__left"">
                                    <div class=""call-outline-btn call-missed-icon"">
                                        <i class=""mdi mdi-phone-missed""></i>
                                    </div>
                                    <div class=""ca-call-hi");
            WriteLiteral(@"story__left--title"">
                                        <div>Missed Call</div>
                                        <span>5 Minutes ago</span>
                                    </div>
                                </div>
                                <div class=""ca-call-history__right"">
                                    <div class=""iconbox btn-solid-info"">
                                        <i class=""iconbox__icon mdi mdi-video-outline""></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class=""ca-content__contactstab"">
    <div class=""container"">
        <div class=""conversation-panel__back-button back2contacts"">
            <i class=""mdi mdi-arrow-left""></i>
            <span>Back</span>
        </div>
        <div class=""ca-profile-thumb"" style=""background");
            WriteLiteral("-image: url(Content/images/media/07.jpg);\">\r\n\r\n            <div class=\"ca-profile-info\">\r\n                <div class=\"ca-profile-pic\">");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b019f035eac78cd24ffb050128f5873c0fd61299109769", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"</div>
            </div>
            <div class=""ca-profile-actions"">
                <div class=""iconbox-group"">
                    <div class=""iconbox btn-hovered-light"">
                        <i class=""iconbox__icon mdi mdi-star-outline""></i>
                    </div>
                    <div class=""iconbox btn-hovered-light"">
                        <i class=""iconbox__icon mdi mdi-pencil-outline""></i>
                    </div>
                    <div class=""iconbox btn-hovered-light"">
                        <i class=""iconbox__icon mdi mdi-dots-horizontal""></i>
                    </div>
                </div>
            </div>

            <div class=""ca-overlay""></div>
        </div>

        <div class=""profile-settings-list border mb-5"">
            <div class=""ca-profile-title"">
                <h2 class=""ca-profile-name"">Pearl Villarreal</h2>
                <div class=""ca-profile-tag"">
                    <span>Co-Workers</span>
                </div>
              ");
            WriteLiteral(@"  <div class=""ca-contcat-profile__calling-buttons pt-2"">

                    <div class=""iconbox iconbox-pill btn-outline-light"">
                        <i class=""iconbox__icon mdi mdi-message-text-outline""></i>
                        <span>Message</span>
                    </div>
                    <div class=""iconbox iconbox-pill btn-outline-light"">
                        <i class=""iconbox__icon mdi mdi-phone""></i>
                        <span>Voice Call</span>
                    </div>
                    <div class=""iconbox iconbox-pill btn-outline-light"">
                        <i class=""iconbox__icon mdi mdi-video-outline""></i>
                        <span>Video Call</span>
                    </div>
                </div>
            </div>

            <div class=""setting-sunheading  setting-sunheading-style01  my-3"">Personal & Contact Information</div>
            <ul class=""list-unstyled"">
                <li>
                    <div class=""ps-list"">
                 ");
            WriteLiteral(@"       <div class=""ps-list__left"">
                            <div class=""ps-list__left--icon""><i class=""mdi mdi-account-heart-outline""></i></div>
                            <div class=""ps-list__left--name"">Nick name</div>
                        </div>
                        <div class=""ps-list__right"">Eva</div>
                    </div>
                </li>
                <li>
                    <div class=""ps-list"">
                        <div class=""ps-list__left"">
                            <div class=""ps-list__left--icon""><i class=""mdi mdi-gender-male-female""></i></div>
                            <div class=""ps-list__left--name"">Gender</div>
                        </div>
                        <div class=""ps-list__right"">Female</div>
                    </div>
                </li>
                <li>
                    <div class=""ps-list"">
                        <div class=""ps-list__left"">
                            <div class=""ps-list__left--icon""><i class=""mdi mdi-");
            WriteLiteral(@"cake""></i></div>
                            <div class=""ps-list__left--name"">Birth date</div>
                        </div>
                        <div class=""ps-list__right"">20/12/2016</div>
                    </div>
                </li>
                <li>
                    <div class=""ps-list"">
                        <div class=""ps-list__left"">
                            <div class=""ps-list__left--icon""><i class=""mdi mdi-cellphone-android""></i></div>
                            <div class=""ps-list__left--name"">Mobile number</div>
                        </div>
                        <div class=""ps-list__right"">+01 369 2015</div>
                    </div>
                </li>
                <li>
                    <div class=""ps-list"">
                        <div class=""ps-list__left"">
                            <div class=""ps-list__left--icon""><i class=""mdi mdi-email-outline""></i></div>
                            <div class=""ps-list__left--name"">Email</div>
           ");
            WriteLiteral(@"             </div>
                        <div class=""ps-list__right"">earnest.clements@email.com</div>
                    </div>
                </li>
                <li>
                    <div class=""ps-list border-bottom-0"">
                        <div class=""ps-list__left"">
                            <div class=""ps-list__left--icon""><i class=""mdi mdi-at""></i></div>
                            <div class=""ps-list__left--name"">Website</div>
                        </div>
                        <div class=""ps-list__right"">www.earnestclements.com</div>
                    </div>
                </li>
            </ul>


            <div class=""setting-sunheading setting-sunheading-style01 my-4"">Social Network</div>


            <ul class=""list-unstyled"">
                <li>
                    <div class=""ps-list"">
                        <div class=""ps-list__left"">
                            <div class=""ps-list__left--icon""><i class=""mdi mdi-facebook""></i></div>
           ");
            WriteLiteral(@"                 <div class=""ps-list__left--name"">Facebook</div>
                        </div>
                        <div class=""ps-list__right"">earnest.clements</div>
                    </div>
                </li>
                <li>
                    <div class=""ps-list"">
                        <div class=""ps-list__left"">
                            <div class=""ps-list__left--icon""><i class=""mdi mdi-instagram""></i></div>
                            <div class=""ps-list__left--name"">Instagram</div>
                        </div>
                        <div class=""ps-list__right"">earnest_clements</div>
                    </div>
                </li>
                <li>
                    <div class=""ps-list"">
                        <div class=""ps-list__left"">
                            <div class=""ps-list__left--icon""><i class=""mdi mdi-snapchat""></i></div>
                            <div class=""ps-list__left--name"">Snapchat</div>
                        </div>
              ");
            WriteLiteral(@"          <div class=""ps-list__right"">earnestclements212</div>
                    </div>
                </li>
                <li>
                    <div class=""ps-list border-bottom-0"">
                        <div class=""ps-list__left"">
                            <div class=""ps-list__left--icon""><i class=""mdi mdi-twitter""></i></div>
                            <div class=""ps-list__left--name"">Twitter</div>
                        </div>
                        <div class=""ps-list__right"">iamearnest</div>
                    </div>
                </li>

            </ul>
        </div>
    </div>
</div>

<script>

    (function ($) {
        $(document).ready(function () {

            generateID()
            choose()
            generateOption()
            selectionOption()
            removeClass()
            uploadImage()
            submit()
            resetButton()
            removeNotification()
            autoRemoveNotification()
            autoDequeue()
");
            WriteLiteral(@"
            var ID
            var way = 0
            var queue = []
            var fullStock = 10
            var speedCloseNoti = 1000

            function generateID() {
                var text = $('header span')
                var newID = ''

                for (var i = 0; i < 3; i++) {
                    newID += Math.floor(Math.random() * 3)
                }

                ID = 'ID: 5988' + newID
                text.html(ID)
            }

            function choose() {
                var li = $('.ways li')
                var section = $('.sections section')
                var index = 0
                li.on('click', function () {
                    index = $(this).index()
                    $(this).addClass('active')
                    $(this).siblings().removeClass('active')

                    section.siblings().removeClass('active')
                    section.eq(index).addClass('active')
                    if (!way) {
                        way =");
            WriteLiteral(@" 1
                    } else {
                        way = 0
                    }
                })
            }

            function generateOption() {
                var select = $('select option')
                var selectAdd = $('.select-option .option')
                $.each(select, function (i, val) {
                    $('.select-option .option').append('<div rel=""' + $(val).val() + '"">' + $(val).html() + '</div>')
                })
            }

            function selectionOption() {
                var select = $('.select-option .head')
                var option = $('.select-option .option div')

                select.on('click', function (event) {
                    event.stopPropagation()
                    $('.select-option').addClass('active')
                })

                option.on('click', function () {
                    var value = $(this).attr('rel')
                    $('.select-option').removeClass('active')
                    select.h");
            WriteLiteral(@"tml(value)

                    $('select#category').val(value)
                })
            }

            function removeClass() {
                $('body').on('click', function () {
                    $('.select-option').removeClass('active')
                })
            }

            function uploadImage() {
                var button = $('.addImages .pic');
                var uploader = $('<input type=""file"" id=""myFile"" accept=""image/*"" />');

                var images = $('.images');

                button.on('click', function () {
                    uploader.click()
                })

                uploader.on('change', function () {
                    var reader = new FileReader()
                    reader.onload = function (event) {
                        images.prepend('<div class=""col-2 img"" id=""imgPreview""> <img class=""photo"" src=""' + event.target.result + '"" height=""150px"" width=""110px"" style=""border-radius: 9%;padding-top: 7%;padding-bottom: 7%;"" rel=""' +");
            WriteLiteral(@" event.target.result + '""><div style=""position: absolute;top: 0;right: 0;background-color: #dc3545;border-radius: 22%;""><i class=""mdi mdi-close"" style=""color:white;""></i></div></div>');
                        //images.prepend('<div class=""col-2 img"" id=""imgPreview""> <img class=""photo"" src=""' + event.target.result + '"" height=""100px"" rel=""' + event.target.result + '""><span><i class=""mdi mdi-trash-can-outline""></i></span></div></div>');
                    }
                    reader.readAsDataURL(uploader[0].files[0])
                })
                images.on('click', '.img', function () {
                    $(this).remove()
                })

                var buttonDoc = $('.addDoc .pic')
                var uploaderDoc = $('<input type=""file"" id=""myFile"" accept=""application/pdf,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/vnd.ms-powerpoint,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,vi");
            WriteLiteral(@"deo/x-ms-wmv,video/x-msvideo,video/mp4,video/webm"" />');
                var imagesDoc = $('.images')

                buttonDoc.on('click', function () {
                    uploaderDoc.click()
                })

                uploaderDoc.on('change', function () {
                    console.log('event is');
                    console.log(event.target);
                    console.log(event.target.value);
                    console.log(event.target.files);
                    var docName = (event.target.value).split('.');
                    var reader = new FileReader()
                    reader.onload = function (event) {
                        console.log(docName[1]);
                        var docImgUrl = docName[1];
                        imagesDoc.prepend('<div class=""col-2 img"" id=""imgPreview""> <img class=""photo"" src=""../lib/images/svg/' + docImgUrl + '.svg"" width=""100%"" height=""100%"" style=""padding-bottom: 7%;"" rel=""' + event.target.result + '""><div style=""position: absolut");
            WriteLiteral(@"e;top: 0;right: 0;background-color: #dc3545;;border-radius: 22%;""><i class=""mdi mdi-close"" style=""color:white;""></i></div></div>')
                    }
                    reader.readAsDataURL(uploaderDoc[0].files[0])
                })

                imagesDoc.on('click', '.img', function () {
                    $(this).remove()
                })
            }

            function submit() {
                var button = $('#send')

                button.on('click', function () {
                    if (!way) {
                        var title = $('#title')
                        var cate = $('#category')
                        var images = $('.images .img')
                        var imageArr = []


                        for (var i = 0; i < images.length; i++) {
                            imageArr.push({ url: $(images[i]).attr('rel') })
                        }

                        var newStock = {
                            title: title.val(),
                 ");
            WriteLiteral(@"           category: cate.val(),
                            images: imageArr,
                            type: 1
                        }

                        saveToQueue(newStock)
                    } else {
                        // discussion
                        var topic = $('#topic')
                        var message = $('#msg')

                        var newStock = {
                            title: topic.val(),
                            message: message.val(),
                            type: 2
                        }

                        saveToQueue(newStock)
                    }
                })
            }

            function removeNotification() {
                var close = $('.notification')
                close.on('click', 'span', function () {
                    var parent = $(this).parent()
                    parent.fadeOut(300)
                    setTimeout(function () {
                        parent.remove()
               ");
            WriteLiteral(@"     }, 300)
                })
            }

            function autoRemoveNotification() {
                setInterval(function () {
                    var notification = $('.notification')
                    var notiPage = $(notification).children('.btn')
                    var noti = $(notiPage[0])

                    setTimeout(function () {
                        setTimeout(function () {
                            noti.remove()
                        }, speedCloseNoti)
                        noti.fadeOut(speedCloseNoti)
                    }, speedCloseNoti)
                }, speedCloseNoti)
            }

            function autoDequeue() {
                var notification = $('.notification')
                var text

                setInterval(function () {

                    if (queue.length > 0) {
                        if (queue[0].type == 2) {
                            text = ' Your discusstion is sent'
                        } else {
              ");
            WriteLiteral(@"              text = ' Your order is allowed.'
                        }

                        notification.append('<div class=""success btn""><p><strong>Success:</strong>' + text + '</p><span><i class=\""fa fa-times\"" aria-hidden=\""true\""></i></span></div>')
                        queue.splice(0, 1)

                    }
                }, 10000)
            }

            function resetButton() {
                var resetbtn = $('#reset')
                resetbtn.on('click', function () {
                    reset()
                })
            }

            // helpers
            function saveToQueue(stock) {
                var notification = $('.notification')
                var check = 0

                if (queue.length <= fullStock) {
                    if (stock.type == 2) {
                        if (!stock.title || !stock.message) {
                            check = 1
                        }
                    } else {
                        if (!stock.titl");
            WriteLiteral(@"e || !stock.category || stock.images == 0) {
                            check = 1
                        }
                    }

                    if (check) {
                        notification.append('<div class=""error btn""><p><strong>Error:</strong> Please fill in the form.</p><span><i class=\""fa fa-times\"" aria-hidden=\""true\""></i></span></div>')
                    } else {
                        notification.append('<div class=""success btn""><p><strong>Success:</strong> ' + ID + ' is submitted.</p><span><i class=\""fa fa-times\"" aria-hidden=\""true\""></i></span></div>')
                        queue.push(stock)
                        reset()
                    }
                } else {
                    notification.append('<div class=""error btn""><p><strong>Error:</strong> Please waiting a queue.</p><span><i class=\""fa fa-times\"" aria-hidden=\""true\""></i></span></div>')
                }
            }
            function reset() {

                $('#title').val('')
      ");
            WriteLiteral(@"          $('.select-option .head').html('Category')
                $('select#category').val('')

                var images = $('.images .img')
                for (var i = 0; i < images.length; i++) {
                    $(images)[i].remove()
                }

                var topic = $('#topic').val('')
                var message = $('#msg').val('')
            }
        })
    })(jQuery)

    $(document).ready(function () {
        $('.conversation-panel__body').animate({
            scrollTop: $('.conversation-panel__body')[0].scrollHeight
        }, 100);
    });


    $(document).ready(function () {
        //getAllMessage();
        connection.on(""SendMessageToUser"", function (ConnectionId, ChatUserId, UserId, Message) {
                console.log('from conversation send message to user calling: ' + ConnectionId);
                console.log('from conversation send message to user calling userid : ' + ChatUserId);
            //    if (parseInt(ChatUserId) == parseInt(");
            WriteLiteral(@"$('#hdnChatUserId').val())){

            //    }
            getAll();
            getAllMessage();
        });

        connection.on(""UserTypeMessage"", function (connectionId, UserId) {
            console.log('my connectionid is :' + connectionId + ' and my user id is: ' + UserId);
            console.log('chat user id is: ' + $('#hdnChatUserId').val())
            if (parseInt(UserId) == parseInt($('#hdnChatUserId').val())) {

                console.log('calling from conversation panel');
                $(""#msgTypingId"").show().delay(3000).fadeOut();
                $(document).ready(function () {
                    $('.conversation-panel__body').animate({
                        scrollTop: $('.conversation-panel__body')[0].scrollHeight
                    }, 40);
                });
            }
        });

        connection.on(""UserReadMessage"", function (connectionId) {
            console.log('message read successfully....');
            getAllMessage();
        });
  ");
            WriteLiteral(@"  });

    var elem = document.getElementById(""txtMessageId"");
    elem.onkeyup = function (e) {
        if (e.keyCode == 13) {
            SendMessage();
        }
    }

    function SendMessage() {
        var userID = $('#hdnUserId').val();
        var chatUserID = $('#hdnChatUserId').val();
        var message = $('#txtMessageId').val();
        var chatUserName = $('#hdnChatUserName').val();
        var lastseen = $('#hdnLastseen').val();
        var msgCount = $('#hdnMsgCount').val();

        var images = $('.images .photo')
        var imageArr = [];

        //var fileUpload = $(""#myFile"").get(0);
        //var files = fileUpload.files;
        //var fileData = new FormData();
        var docData = new Object();
        //for (var i = 0; i < files.length; i++) {
        //    fileData.append(files[i].name, files[i]);
        //}

        //for (var i = 0; i < files.length; i++) {
        //    fileData.append(files[i].name, files[i]);
        //}
        for (var i = 0");
            WriteLiteral(@"; i < images.length; i++) {
            imageArr.push({ url: $(images[i]).attr('rel') });
            console.log(imageArr[i]);
        }

        console.log(JSON.stringify(imageArr));


        var today = new Date();
        var h = today.getHours();
        var m = today.getMinutes();
        var messageTime = today.getHours() + "":"" + today.getMinutes();

        var messageHtml = '<div class=""ca-send""><div class=""ca-send__msg-group""><div class=""ca-send__msgwrapper""><div class=""ca-msg-actions"">                                                        <div class=""iconbox-dropdown dropdown"">                                                            <div class=""iconbox btn-hovered-light"" id=""dropdownMenuButtons1"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">                                                                <i class=""iconbox__icon mdi mdi-dots-horizontal""></i>                                                            </div>                         ");
            WriteLiteral(@"                                   <div class=""dropdown-menu dropdown-menu-right"" aria-labelledby=""dropdownMenuButtons1"">                                                                <a class=""dropdown-item"" href=""javascript:;"">                                                                    <span><i class=""mdi mdi-share-outline""></i></span>                                                                    <span>Forward</span>                                                                </a>                                                                <a class=""dropdown-item"" href=""javascript:;"">                                                                    <span><i class=""mdi mdi-content-copy""></i></span>                                                                    <span>Copy</span>                                                                </a>                                                                <a class=""dropdown-item"" href=""javascript:;"">                                ");
            WriteLiteral(@"                                    <span><i class=""mdi mdi-star-outline""></i></span>                                                                    <span>Add Star</span>                                                                </a>                                                                <a class=""dropdown-item"" href=""javascript:;"">                                                                    <span><i class=""mdi mdi-trash-can-outline""></i></span>                                                                    <span>Delete</span>                                                                </a>                                                            </div>                                                        </div>                                                    </div>                                                    <div class=""ca-send__msg"">' + message + '</div>                                                </div>                                                <div clas");
            WriteLiteral(@"s=""metadata"">                                                    <span class=""time"">' + messageTime + '</span>                                                    <span class=""tick"">                                                        <img src=""/lib/images/tick/tick-delivered.svg"" alt="""">                                                    </span>                                                </div>                                            </div>                                            <div class=""user-avatar user-avatar-sm user-avatar-rounded online"">                                                <img src=""../lib/images/user/250/02.jpg"" alt="""">                                            </div>                                        </div>'
        if (images.length == 0) {
            $.ajax({
                //url: ""http://50.21.182.225/aspdontnetcoredemo/Chat/ConversationPanel?UserId="" + userID + ""&ChatUserId="" + chatUserID + ""&ChatUserName="" + chatUserName + ""&Lastseen="" + lastseen + ""&Message=");
            WriteLiteral(@""" + message + ""&imageArr="" + imageArr + """",
                url: ""../Chat/ConversationPanel?UserId="" + userID + ""&ChatUserId="" + chatUserID + ""&ChatUserName="" + chatUserName + ""&Lastseen="" + lastseen + ""&Message="" + message + ""&imageArr="" + imageArr + ""&MsgCount="" + msgCount + """",
                contentType: 'application/html; charset=utf-8',
                type: ""GET"",
                dataType: 'html',
                success: function (result) {
                    $(""#htmlMessageId"").append(messageHtml);
                    $(""#txtMessageId"").val('');
                    getAllMessage();
                    $(document).ready(function () {
                        $('.conversation-panel__body').animate({
                            scrollTop: $('.conversation-panel__body')[0].scrollHeight
                        }, 40);
                    });
                    var chatUserID = $('#hdnChatUserId').val();
                    var userID = $('#hdnUserId').val();
                    connectio");
            WriteLiteral(@"n.invoke(""SendAndGetMessage"", chatUserID, userID, message).catch(function (err) {
                        return console.error(err.toString());
                    });
                    getAll();
                }
            });
        }
        else {
            docData.File = imageArr;
            docData.UserId = userID;
            docData.ChatUserID = chatUserID;
            //var imageHtml=null;
            for (var i = 0; i < images.length; i++) {
                //imageHtml.append({ url: $(images[i]).attr('rel') });
                console.log(imageArr[i].url);
                $(""#htmlMessageId"").append('<div class=""ca-send""><div class=""ca-send__msg-group""><div class=""ca-send__msgwrapper""><div class=""ca-msg-actions""><div class=""iconbox-dropdown dropdown""><div class=""iconbox btn-hovered-light"" id=""dropdownMenuButtonsms1"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false""><i class=""iconbox__icon mdi mdi-dots-horizontal""></i></div><div class=""dropdown-menu");
            WriteLiteral(@""" aria-labelledby=""dropdownMenuButtonsms1""><a class=""dropdown-item"" href=""javascript:;""><span><i class=""mdi mdi-download-outline""></i></span><span>Download</span></a><a class=""dropdown-item"" href=""javascript:;""><span><i class=""mdi mdi-share-outline""></i></span><span>Forward</span></a><a class=""dropdown-item"" href=""javascript:;""><span><i class=""mdi mdi-content-copy""></i></span><span>Copy</span></a><a class=""dropdown-item"" href=""javascript:;""><span><i class=""mdi mdi-star-outline""></i></span><span>Add Star</span></a><a class=""dropdown-item"" href=""javascript:;""><span><i class=""mdi mdi-trash-can-outline""></i></span><span>Delete</span></a></div></div></div><div class=""ca-send__msg""><div class=""ca-send__msg-media-group""><div class=""ca-send__msg-media""><img src=""' + imageArr[i].url + '"" alt=""""></div></div></div></div><div class=""metadata""><span class=""time"">' + messageTime + '</span><span class=""tick""><img src=""/lib/images/tick/tick-delivered.svg"" alt=""""></span></div></div><div class=""user-avatar user-avatar-sm user-");
            WriteLiteral(@"avatar-rounded online""><img src=""../lib/images/user/250/02.jpg"" alt=""""></div></div>');

                $(document).ready(function () {
                    $('.conversation-panel__body').animate({
                        scrollTop: $('.conversation-panel__body')[0].scrollHeight
                    }, 40);
                });
            }
            for (var i = 0; i < images.length; i++) {
                $(""#imgPreview"").remove();
            }
            console.log(JSON.stringify(docData));
            $.ajax({
                //url: ""http://50.21.182.225/aspdontnetcoredemo/Chat/UploadDocument"",
                url: ""../Chat/UploadDocument"",
                type: ""post"",
                data: JSON.stringify(docData),
                contentType: 'application/json; charset=utf-8',
                //processData: false,
                //contentType: false,
                //dataType: 'json',
                //beforeSend: function (xhr) {
                //    xhr.setRequestHeader(""XS");
            WriteLiteral(@"RF-TOKEN"",
                //        $('input:hidden[name=""__RequestVerificationToken""]').val());
                //},
                success: function (result) {
                    //$(""#htmlMessageId"").append(imageHtml);
                    $(""#txtMessageId"").val('');
                    getAllMessage();
                    $(document).ready(function () {
                        $('.conversation-panel__body').animate({
                            scrollTop: $('.conversation-panel__body')[0].scrollHeight
                        }, 40);
                    });
                    var chatUserID = $('#hdnChatUserId').val();
                    var userID = $('#hdnUserId').val();
                    connection.invoke(""SendAndGetMessage"", chatUserID, userID, message).catch(function (err) {
                        return console.error(err.toString());
                    });
                    getAll();
                }
            });
        }

    }

    function getAllMessage() {
");
            WriteLiteral(@"        var model = $('#htmlMessageBody');
        var userID = $('#hdnUserId').val();
        var chatUserID = $('#hdnChatUserId').val();
        var chatUserName = $('#hdnChatUserName').val();
        var lastseen = $('#hdnLastseen').val();
        $.ajax({
            url: ""../Chat/MessagePanel?UserId="" + userID + ""&ChatUserId="" + chatUserID + """",
            //url: ""http://50.21.182.225/aspdontnetcoredemo/Chat/MessagePanel?UserId="" + userID + ""&ChatUserId="" + chatUserID + """",
            contentType: 'application/html ; charset:utf-8',
            type: 'GET',
            dataType: 'html',
            success: function (result) {
                model.empty().append(result);
                $(document).ready(function () {
                    $('.conversation-panel__body').animate({
                        scrollTop: $('.conversation-panel__body')[0].scrollHeight
                    }, 40);
                });
            }
        });
    }

    function UserTyping() {
        var c");
            WriteLiteral(@"hatUserID = $('#hdnChatUserId').val();
        var userID = $('#hdnUserId').val();

        console.log('conver panel my user id is: ' + userID);
        console.log('conver panel typing');

        connection.invoke(""MessageTyping"", chatUserID, userID).catch(function (err) {
            return console.error(err.toString());
        });
    }

    $('#txtMessageId').keydown(function () {
        let timer, timeoutVal = 700;
        var chatUserID = $('#hdnChatUserId').val();
        var userID = $('#hdnUserId').val();
        console.log('conver. panel key down');
        //clearTimeout(timer);
        connection.invoke(""MessageTyping"", chatUserID, userID).catch(function (err) {
            return console.error(err.toString());
        });
    });




</script>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b019f035eac78cd24ffb050128f5873c0fd61299143953", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b019f035eac78cd24ffb050128f5873c0fd61299144995", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b019f035eac78cd24ffb050128f5873c0fd61299146037", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b019f035eac78cd24ffb050128f5873c0fd61299147079", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b019f035eac78cd24ffb050128f5873c0fd61299148121", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b019f035eac78cd24ffb050128f5873c0fd61299149163", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IHttpContextAccessor HttpContextAccessor { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DotNetCoreMVCDemos.Models.ChatConversation> Html { get; private set; }
    }
}
#pragma warning restore 1591
